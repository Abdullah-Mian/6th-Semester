# -*- coding: utf-8 -*-
"""multiple_linear_regression.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1w3jC9J-V7du5dNdII2qPuhyEGe93ATNm

***Welcome to AI Lab***

# Multiple Linear Regression

## Importing the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""## Importing the dataset"""

dataset = pd.read_excel('https://docs.google.com/spreadsheets/d/1rjdwjeGxtfVYQG5GE8tDrqr5Ypn7E_qgaOUdlVOAo1k/export?format=xlsx')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

dataset

print(y)

"""## Encoding categorical data"""

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder
ct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [3])], remainder='passthrough')
X = ct.fit_transform(X)

print(X)

"""## Splitting the dataset into the Training set and Test set"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2,random_state=0)

"""## Training the Multiple Linear Regression model on the Training set"""

print(X_train)

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

"""## Predicting the Test set results"""

y_pred = regressor.predict(X_test)
np.set_printoptions(precision=2)
print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))

print(regressor.predict([[0,1,0,190000,130000,300000]]))

print(regressor.coef_)

print(regressor.intercept_)