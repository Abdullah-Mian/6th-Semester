# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ofLDtghcbAP6HoQRsqykT3sR83Da2iiD
"""

import numpy as np
import pandas as pd

dataset = pd.read_csv('/content/USA_Housing.csv')
y = dataset['Price'].values
X = dataset.drop('Price', axis=1).values
# X = dataset.iloc[:, :5]
# Y = dataset.iloc[:, 5]

dataset

print(y)

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=4335)

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train, y_train)

y_pred = regressor.predict(X_test)

multipleLinearRegressionCmp = pd.DataFrame({'Actual': y_test, 'Predicted': y_pred})
print(multipleLinearRegressionCmp)

from sklearn.metrics import mean_squared_error
mse=mean_squared_error(y_test,y_pred)
print('Mean Squared Error:',mse)

from sklearn import tree
from sklearn.metrics import mean_squared_error

DecisionTreeRegression = tree.DecisionTreeRegressor()
DecisionTreeRegression.fit(X_train, y_train)

print("Decision Tree")

y_pred_train2 = DecisionTreeRegression.predict(X_train)
MSE_train2 = mean_squared_error(y_train, y_pred_train2)


y_pred_test2 = DecisionTreeRegression.predict(X_test)
MSE_test2 = mean_squared_error(y_test, y_pred_test2)

print("Decision Tree Train set: MSE {}".format(RMSE_train2))
print("Decision Tree Test set: MSE {}".format(RMSE_test2))

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error

RandomForestRegression = RandomForestRegressor()
RandomForestRegression.fit(X_train, y_train)

print("Random Forest Regression")

y_pred_train3 = RandomForestRegression.predict(X_train)
MSE_train3 = mean_squared_error(y_train, y_pred_train3)
print("Random Forest Regressor TrainSet: MSE {}".format(MSE_train3))

y_pred_test3 = RandomForestRegression.predict(X_test)
MSE_test3 = mean_squared_error(y_test, y_pred_test3)
print("Random Forest Regressor TestSet: MSE {}".format(MSE_test3))

