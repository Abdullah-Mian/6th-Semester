# -*- coding: utf-8 -*-
"""week4_Lab_manual_contents.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1DHc4QiEpoCG5N1lTREu432UUV9dNPn66

**LAB MANUAL TASK(MULTIPLE LINEAR REGRESSION)**
"""

from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error
import numpy as np
from sklearn import linear_model
import pandas as pd
import matplotlib.pyplot as plt

df=pd.read_csv("https://docs.google.com/spreadsheets/d/1ncZRplHVFURUMWGLBjIClcW3SFFUuhLR8gb1abapBoo/export?format=csv")
df.head()

print(df.describe())

df.corr()

Y_POSITION=5

# Code for feature extraction and model splitting
model_1_features = [i for i in range(0, Y_POSITION)]

# Extracting features (X) and target variable (Y) from the DataFrame (df)
X = df.iloc[:, model_1_features]
Y = df.iloc[:, Y_POSITION]

# Splitting data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.20, random_state=2020)

model1 = linear_model.LinearRegression()
model1.fit(X_train, y_train)
y_pred_train1 = model1.predict(X_train)

# Calculate and print RMSE for training set
print("Regression")
print("====================")
RMSE_train1 = mean_squared_error(y_train, y_pred_train1)
print("Regression Train set: RMSE {}".format(RMSE_train1))

# Predict and evaluate on the testing set
y_pred1 = model1.predict(X_test)
RMSE_test1 = mean_squared_error(y_test, y_pred1)
print("====================")
print("Regression Test set: RMSE {}".format(RMSE_test1))

# Display model coefficients
coef_dict = {}
for coef, feat in zip(model1.coef_, model_1_features):
    coef_dict[df.columns[feat]] = coef
print(coef_dict)

x_values = np.arange(len(y_test))
plt.scatter(x_values, y_test, color='red', label='Actual')
plt.scatter(x_values, y_pred1, color='green', label='Predicted')
plt.xlabel('Index or Sequence of Values')
plt.ylabel('Values')
plt.title('Actual vs Predicted Values')
plt.legend()
plt.show()